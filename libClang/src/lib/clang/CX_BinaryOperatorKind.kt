// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Represents a specific kind of binary operator which can appear at a cursor.
 */
public enum class CX_BinaryOperatorKind(
    public val `value`: Int,
) {
    BOInvalid(0),
    BOPtrMemD(1),
    BOPtrMemI(2),
    BOMul(3),
    BODiv(4),
    BORem(5),
    BOAdd(6),
    BOSub(7),
    BOShl(8),
    BOShr(9),
    BOCmp(10),
    BOLT(11),
    BOGT(12),
    BOLE(13),
    BOGE(14),
    BOEQ(15),
    BONE(16),
    BOAnd(17),
    BOXor(18),
    BOOr(19),
    BOLAnd(20),
    BOLOr(21),
    BOAssign(22),
    BOMulAssign(23),
    BODivAssign(24),
    BORemAssign(25),
    BOAddAssign(26),
    BOSubAssign(27),
    BOShlAssign(28),
    BOShrAssign(29),
    BOAndAssign(30),
    BOXorAssign(31),
    BOOrAssign(32),
    BOComma(33),
    BOLAST(BOComma.value),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CX_BinaryOperatorKind::class.java,
            "fromInt",
            MethodType.methodType(CX_BinaryOperatorKind::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CX_BinaryOperatorKind::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CX_BinaryOperatorKind = when (value) {
            BOInvalid.value -> BOInvalid
            BOPtrMemD.value -> BOPtrMemD
            BOPtrMemI.value -> BOPtrMemI
            BOMul.value -> BOMul
            BODiv.value -> BODiv
            BORem.value -> BORem
            BOAdd.value -> BOAdd
            BOSub.value -> BOSub
            BOShl.value -> BOShl
            BOShr.value -> BOShr
            BOCmp.value -> BOCmp
            BOLT.value -> BOLT
            BOGT.value -> BOGT
            BOLE.value -> BOLE
            BOGE.value -> BOGE
            BOEQ.value -> BOEQ
            BONE.value -> BONE
            BOAnd.value -> BOAnd
            BOXor.value -> BOXor
            BOOr.value -> BOOr
            BOLAnd.value -> BOLAnd
            BOLOr.value -> BOLOr
            BOAssign.value -> BOAssign
            BOMulAssign.value -> BOMulAssign
            BODivAssign.value -> BODivAssign
            BORemAssign.value -> BORemAssign
            BOAddAssign.value -> BOAddAssign
            BOSubAssign.value -> BOSubAssign
            BOShlAssign.value -> BOShlAssign
            BOShrAssign.value -> BOShrAssign
            BOAndAssign.value -> BOAndAssign
            BOXorAssign.value -> BOXorAssign
            BOOrAssign.value -> BOOrAssign
            BOComma.value -> BOComma
            BOLAST.value -> BOLAST
            else -> error("enum not found")
        }
    }
}
