// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Flags that control the reparsing of translation units.
 *
 * The enumerators in this enumeration type are meant to be bitwise
 * ORed together to specify which options should be used when
 * reparsing the translation unit.
 */
public enum class CXReparse_Flags(
    public val `value`: Int,
) {
    /**
     *
     * Used to indicate that no special reparsing options are needed.
     */
    None(0x0),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXReparse_Flags::class.java,
            "fromInt",
            MethodType.methodType(CXReparse_Flags::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXReparse_Flags::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXReparse_Flags = when (value) {
            None.value -> None
            else -> error("enum not found")
        }
    }
}
