// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.foreign.*
import java.lang.invoke.MethodHandle

/**
 *
 * Uniquely identifies a CXFile, that refers to the same underlying file,
 * across an indexing session.
 */
@JvmInline
public value class CXFileUniqueID(
    public val `$mem`: MemorySegment,
) {
    public val `data`: NativeArray<ULong>
        get() = dataHandle.invokeExact(this.`$mem`, 0L) as MemorySegment

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(3L, ValueLayout.JAVA_LONG).withName("data"),
        ).withName("CXFileUniqueID")

        @JvmField
        public val dataHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("data"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): CXFileUniqueID =
            CXFileUniqueID(alloc.allocate(layout))
    }
}
