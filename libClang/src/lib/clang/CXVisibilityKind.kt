// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class CXVisibilityKind(
    public val `value`: Int,
) {
    /**
     * This value indicates that no visibility information is available
     * for a provided CXCursor.
     */
    Invalid(0),

    /**
     * Symbol not seen by the linker.
     */
    Hidden(1),

    /**
     * Symbol seen by the linker but resolves to a symbol inside this object.
     */
    Protected(2),

    /**
     * Symbol seen by the linker and acts like a normal symbol.
     */
    Default(3),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXVisibilityKind::class.java,
            "fromInt",
            MethodType.methodType(CXVisibilityKind::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXVisibilityKind::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXVisibilityKind = when (value) {
            Invalid.value -> Invalid
            Hidden.value -> Hidden
            Protected.value -> Protected
            Default.value -> Default
            else -> error("enum not found")
        }
    }
}
