// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Error codes for Compilation Database
 */
public enum class CXCompilationDatabase_Error(
    public val `value`: Int,
) {
    /**
     * No error occurred
     */
    NoError(0),

    /**
     * Database can not be loaded
     */
    CanNotLoadDatabase(1),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXCompilationDatabase_Error::class.java,
            "fromInt",
            MethodType.methodType(CXCompilationDatabase_Error::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXCompilationDatabase_Error::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXCompilationDatabase_Error = when (value) {
            NoError.value -> NoError
            CanNotLoadDatabase.value -> CanNotLoadDatabase
            else -> error("enum not found")
        }
    }
}
