// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.foreign.*
import java.lang.invoke.VarHandle

/**
 *
 * Describes a version number of the form major.minor.subminor.
 */
@JvmInline
public value class CXVersion(
    public val `$mem`: MemorySegment,
) {
    public var Major: Int
        get() = MajorHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            MajorHandle.set(this.`$mem`, 0L, value)
        }

    public var Minor: Int
        get() = MinorHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            MinorHandle.set(this.`$mem`, 0L, value)
        }

    public var Subminor: Int
        get() = SubminorHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            SubminorHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("Major"),
            ValueLayout.JAVA_INT.withName("Minor"),
            ValueLayout.JAVA_INT.withName("Subminor"),
        ).withName("CXVersion")

        @JvmField
        public val MajorHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("Major"))

        @JvmField
        public val MinorHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("Minor"))

        @JvmField
        public val SubminorHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("Subminor"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): CXVersion = CXVersion(alloc.allocate(layout))
    }
}
