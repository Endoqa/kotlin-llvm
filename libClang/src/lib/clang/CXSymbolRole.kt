// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Roles that are attributed to symbol occurrences.
 *
 * Internal: this currently mirrors low 9 bits of clang::index::SymbolRole with
 * higher bits zeroed. These high bits may be exposed in the future.
 */
public enum class CXSymbolRole(
    public val `value`: Int,
) {
    None(0),
    Declaration(1),
    Definition(2),
    Reference(4),
    Read(8),
    Write(16),
    Call(32),
    Dynamic(64),
    AddressOf(128),
    Implicit(256),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXSymbolRole::class.java,
            "fromInt",
            MethodType.methodType(CXSymbolRole::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXSymbolRole::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXSymbolRole = when (value) {
            None.value -> None
            Declaration.value -> Declaration
            Definition.value -> Definition
            Reference.value -> Reference
            Read.value -> Read
            Write.value -> Write
            Call.value -> Call
            Dynamic.value -> Dynamic
            AddressOf.value -> AddressOf
            Implicit.value -> Implicit
            else -> error("enum not found")
        }
    }
}
