// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Describes the exception specification of a cursor.
 *
 * A negative value indicates that the cursor is not a function declaration.
 */
public enum class CXCursor_ExceptionSpecificationKind(
    public val `value`: Int,
) {
    /**
     *
     * The cursor has no exception specification.
     */
    None(0),

    /**
     *
     * The cursor has exception specification throw()
     */
    DynamicNone(1),

    /**
     *
     * The cursor has exception specification throw(T1, T2)
     */
    Dynamic(2),

    /**
     *
     * The cursor has exception specification throw(...).
     */
    MSAny(3),

    /**
     *
     * The cursor has exception specification basic noexcept.
     */
    BasicNoexcept(4),

    /**
     *
     * The cursor has exception specification computed noexcept.
     */
    ComputedNoexcept(5),

    /**
     *
     * The exception specification has not yet been evaluated.
     */
    Unevaluated(6),

    /**
     *
     * The exception specification has not yet been instantiated.
     */
    Uninstantiated(7),

    /**
     *
     * The exception specification has not been parsed yet.
     */
    Unparsed(8),

    /**
     *
     * The cursor has a __declspec(nothrow) exception specification.
     */
    NoThrow(9),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXCursor_ExceptionSpecificationKind::class.java,
            "fromInt",
            MethodType.methodType(CXCursor_ExceptionSpecificationKind::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXCursor_ExceptionSpecificationKind::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXCursor_ExceptionSpecificationKind = when (value) {
            None.value -> None
            DynamicNone.value -> DynamicNone
            Dynamic.value -> Dynamic
            MSAny.value -> MSAny
            BasicNoexcept.value -> BasicNoexcept
            ComputedNoexcept.value -> ComputedNoexcept
            Unevaluated.value -> Unevaluated
            Uninstantiated.value -> Uninstantiated
            Unparsed.value -> Unparsed
            NoThrow.value -> NoThrow
            else -> error("enum not found")
        }
    }
}
