// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Data for IndexerCallbacks#indexEntityReference.
 *
 * This may be deprecated in a future version as this duplicates
 * the \c CXSymbolRole_Implicit bit in \c CXSymbolRole.
 */
public enum class CXIdxEntityRefKind(
    public val `value`: Int,
) {
    /**
     *
     * The entity is referenced directly in user's code.
     */
    Direct(1),

    /**
     *
     * An implicit reference, e.g. a reference of an Objective-C method
     * via the dot syntax.
     */
    Implicit(2),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXIdxEntityRefKind::class.java,
            "fromInt",
            MethodType.methodType(CXIdxEntityRefKind::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXIdxEntityRefKind::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXIdxEntityRefKind = when (value) {
            Direct.value -> Direct
            Implicit.value -> Implicit
            else -> error("enum not found")
        }
    }
}
