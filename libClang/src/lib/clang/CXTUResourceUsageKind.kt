// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Categorizes how memory is being used by a translation unit.
 */
public enum class CXTUResourceUsageKind(
    public val `value`: Int,
) {
    AST(1),
    Identifiers(2),
    Selectors(3),
    GlobalCompletionResults(4),
    SourceManagerContentCache(5),
    ASTSideTables(6),
    SourceManagerMembufferMalloc(7),
    SourceManagerMembufferMMap(8),
    ExternalASTSourceMembufferMalloc(9),
    ExternalASTSourceMembufferMMap(10),
    Preprocessor(11),
    PreprocessingRecord(12),
    SourceManagerDataStructures(13),
    PreprocessorHeaderSearch(14),
    MEMORYINBYTESBEGIN(AST.value),
    MEMORYINBYTESEND(PreprocessorHeaderSearch.value),
    First(AST.value),
    Last(PreprocessorHeaderSearch.value),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXTUResourceUsageKind::class.java,
            "fromInt",
            MethodType.methodType(CXTUResourceUsageKind::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXTUResourceUsageKind::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXTUResourceUsageKind = when (value) {
            AST.value -> AST
            Identifiers.value -> Identifiers
            Selectors.value -> Selectors
            GlobalCompletionResults.value -> GlobalCompletionResults
            SourceManagerContentCache.value -> SourceManagerContentCache
            ASTSideTables.value -> ASTSideTables
            SourceManagerMembufferMalloc.value -> SourceManagerMembufferMalloc
            SourceManagerMembufferMMap.value -> SourceManagerMembufferMMap
            ExternalASTSourceMembufferMalloc.value -> ExternalASTSourceMembufferMalloc
            ExternalASTSourceMembufferMMap.value -> ExternalASTSourceMembufferMMap
            Preprocessor.value -> Preprocessor
            PreprocessingRecord.value -> PreprocessingRecord
            SourceManagerDataStructures.value -> SourceManagerDataStructures
            PreprocessorHeaderSearch.value -> PreprocessorHeaderSearch
            MEMORYINBYTESBEGIN.value -> MEMORYINBYTESBEGIN
            MEMORYINBYTESEND.value -> MEMORYINBYTESEND
            First.value -> First
            Last.value -> Last
            else -> error("enum not found")
        }
    }
}
