// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Represents the C++ access control level to a base class for a
 * cursor with kind CX_CXXBaseSpecifier.
 */
public enum class CX_CXXAccessSpecifier(
    public val `value`: Int,
) {
    CXXInvalidAccessSpecifier(0),
    CXXPublic(1),
    CXXProtected(2),
    CXXPrivate(3),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CX_CXXAccessSpecifier::class.java,
            "fromInt",
            MethodType.methodType(CX_CXXAccessSpecifier::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CX_CXXAccessSpecifier::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CX_CXXAccessSpecifier = when (value) {
            CXXInvalidAccessSpecifier.value -> CXXInvalidAccessSpecifier
            CXXPublic.value -> CXXPublic
            CXXProtected.value -> CXXProtected
            CXXPrivate.value -> CXXPrivate
            else -> error("enum not found")
        }
    }
}
