// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class CXTUResourceUsageEntry(
    public val `$mem`: MemorySegment,
) {
    public var kind: CXTUResourceUsageKind
        get() = CXTUResourceUsageKind.fromInt(kindHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            kindHandle.set(this.`$mem`, 0L, value.value)
        }

    public var amount: ULong
        get() = (amountHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            amountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("kind"),
            MemoryLayout.paddingLayout(4),
            ValueLayout.JAVA_LONG.withName("amount"),
        ).withName("CXTUResourceUsageEntry")

        @JvmField
        public val kindHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("kind"))

        @JvmField
        public val amountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("amount"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): CXTUResourceUsageEntry =
            CXTUResourceUsageEntry(alloc.allocate(layout))
    }
}
