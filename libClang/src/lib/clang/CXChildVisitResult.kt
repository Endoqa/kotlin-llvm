// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Describes how the traversal of the children of a particular
 * cursor should proceed after visiting a particular child cursor.
 *
 * A value of this enumeration type should be returned by each
 * \c CXCursorVisitor to indicate how clang_visitChildren() proceed.
 */
public enum class CXChildVisitResult(
    public val `value`: Int,
) {
    /**
     *
     * Terminates the cursor traversal.
     */
    Break(0),

    /**
     *
     * Continues the cursor traversal with the next sibling of
     * the cursor just visited, without visiting its children.
     */
    Continue(1),

    /**
     *
     * Recursively traverse the children of this cursor, using
     * the same visitor and client data.
     */
    Recurse(2),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXChildVisitResult::class.java,
            "fromInt",
            MethodType.methodType(CXChildVisitResult::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXChildVisitResult::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXChildVisitResult = when (value) {
            Break.value -> Break
            Continue.value -> Continue
            Recurse.value -> Recurse
            else -> error("enum not found")
        }
    }
}
