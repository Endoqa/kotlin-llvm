// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.clang

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Describe the linkage of the entity referred to by a cursor.
 */
public enum class CXLinkageKind(
    public val `value`: Int,
) {
    /**
     * This value indicates that no linkage information is available
     * for a provided CXCursor.
     */
    Invalid(0),

    /**
     *
     * This is the linkage for variables, parameters, and so on that
     * have automatic storage.  This covers normal (non-extern) local variables.
     */
    NoLinkage(1),

    /**
     * This is the linkage for static variables and static functions.
     */
    Internal(2),

    /**
     * This is the linkage for entities with external linkage that live
     * in C++ anonymous namespaces.
     */
    UniqueExternal(3),

    /**
     * This is the linkage for entities with true, external linkage.
     */
    External(4),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXLinkageKind::class.java,
            "fromInt",
            MethodType.methodType(CXLinkageKind::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXLinkageKind::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): CXLinkageKind = when (value) {
            Invalid.value -> Invalid
            NoLinkage.value -> NoLinkage
            Internal.value -> Internal
            UniqueExternal.value -> UniqueExternal
            External.value -> External
            else -> error("enum not found")
        }
    }
}
