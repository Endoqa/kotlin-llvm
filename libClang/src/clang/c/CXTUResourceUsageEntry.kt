// this file is auto generated by endoqa kotlin ffi, modify it with caution
package clang.c

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
value class CXTUResourceUsageEntry(
    val `$mem`: MemorySegment,
) {
    var kind: CXTUResourceUsageKind
        get() = CXTUResourceUsageKind.fromInt(
            kindHandle.get(this.`$mem`, 0L) as
                    Int
        )
        set(`value`) {
            kindHandle.set(this.`$mem`, 0L, value.value)
        }

    var amount: ULong
        get() = (amountHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            amountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    companion object {
        val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("kind"),
            MemoryLayout.paddingLayout(4),
            ValueLayout.JAVA_LONG.withName("amount"),
        ).withName("CXTUResourceUsageEntry")

        @JvmField
        val kindHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("kind"))

        @JvmField
        val amountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("amount"))

        @JvmStatic
        fun allocate(alloc: SegmentAllocator): CXTUResourceUsageEntry =
            CXTUResourceUsageEntry(alloc.allocate(layout))
    }
}
