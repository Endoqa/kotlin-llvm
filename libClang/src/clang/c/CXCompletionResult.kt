// this file is auto generated by endoqa kotlin ffi, modify it with caution
package clang.c

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
value class CXCompletionResult(
    val `$mem`: MemorySegment,
) {
    var CursorKind: CXCursorKind
        get() = CXCursorKind.fromInt(CursorKindHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            CursorKindHandle.set(this.`$mem`, 0L, value.value)
        }

    var CompletionString: CXCompletionString
        get() = CompletionStringHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            CompletionStringHandle.set(this.`$mem`, 0L, value)
        }

    constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    companion object {
        val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("CursorKind"),
            MemoryLayout.paddingLayout(4),
            `$RuntimeHelper`.POINTER.withName("CompletionString"),
        ).withName("CXCompletionResult")

        @JvmField
        val CursorKindHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("CursorKind"))

        @JvmField
        val CompletionStringHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("CompletionString"))

        @JvmStatic
        fun allocate(alloc: SegmentAllocator): CXCompletionResult =
            CXCompletionResult(alloc.allocate(layout))
    }
}
