// this file is auto generated by endoqa kotlin ffi, modify it with caution
package clang.c

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
value class CXIdxBaseClassInfo(
    val `$mem`: MemorySegment,
) {
    var base: Pointer<CXIdxEntityInfo>
        get() = baseHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            baseHandle.set(this.`$mem`, 0L, value)
        }

    var cursor: CXCursor
        get() = CXCursor(cursorHandle.invokeExact(this.`$mem`, 0L) as MemorySegment)
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.cursor.`$mem`, 0L, CXCursor.layout.byteSize())
        }

    var loc: CXIdxLoc
        get() = CXIdxLoc(locHandle.invokeExact(this.`$mem`, 0L) as MemorySegment)
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.loc.`$mem`, 0L, CXIdxLoc.layout.byteSize())
        }

    constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    companion object {
        val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("base"),
            CXCursor.layout.withName("cursor"),
            CXIdxLoc.layout.withName("loc"),
        ).withName("CXIdxBaseClassInfo")

        @JvmField
        val baseHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("base"))

        @JvmField
        val cursorHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("cursor"))

        @JvmField
        val locHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("loc"))

        @JvmStatic
        fun allocate(alloc: SegmentAllocator): CXIdxBaseClassInfo =
            CXIdxBaseClassInfo(alloc.allocate(layout))
    }
}
