// this file is auto generated by endoqa kotlin ffi, modify it with caution
package clang.c

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
value class CXType(
    val `$mem`: MemorySegment,
) {
    var kind: CXTypeKind
        get() = CXTypeKind.fromInt(kindHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            kindHandle.set(this.`$mem`, 0L, value.value)
        }

    val `data`: NativeArray<Pointer<Unit>>
        get() = dataHandle.invokeExact(this.`$mem`, 0L) as MemorySegment

    constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    companion object {
        val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("kind"),
            MemoryLayout.paddingLayout(4),
            MemoryLayout.sequenceLayout(2L, `$RuntimeHelper`.POINTER).withName("data"),
        ).withName("CXType")

        @JvmField
        val kindHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("kind"))

        @JvmField
        val dataHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("data"))

        @JvmStatic
        fun allocate(alloc: SegmentAllocator): CXType = CXType(alloc.allocate(layout))
    }
}
