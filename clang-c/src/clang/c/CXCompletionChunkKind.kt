// this file is auto generated by endoqa kotlin ffi, modify it with caution
package clang.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

enum class CXCompletionChunkKind(
    val `value`: Int,
) {
    Optional(0x00000000),
    TypedText(0x00000001),
    Text(0x00000002),
    Placeholder(0x00000003),
    Informative(0x00000004),
    CurrentParameter(0x00000005),
    LeftParen(0x00000006),
    RightParen(0x00000007),
    LeftBracket(0x00000008),
    RightBracket(0x00000009),
    LeftBrace(0x0000000a),
    RightBrace(0x0000000b),
    LeftAngle(0x0000000c),
    RightAngle(0x0000000d),
    Comma(0x0000000e),
    ResultType(0x0000000f),
    Colon(0x00000010),
    SemiColon(0x00000011),
    Equal(0x00000012),
    HorizontalSpace(0x00000013),
    VerticalSpace(0x00000014),
    ;

    companion object {
        @JvmStatic
        val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            CXCompletionChunkKind::class.java,
            "fromInt",
            MethodType.methodType(CXCompletionChunkKind::class.java, Int::class.java)
        )

        @JvmStatic
        val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            CXCompletionChunkKind::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        fun fromInt(`value`: Int): CXCompletionChunkKind = when (value) {
            0x00000000 -> Optional
            0x00000001 -> TypedText
            0x00000002 -> Text
            0x00000003 -> Placeholder
            0x00000004 -> Informative
            0x00000005 -> CurrentParameter
            0x00000006 -> LeftParen
            0x00000007 -> RightParen
            0x00000008 -> LeftBracket
            0x00000009 -> RightBracket
            0x0000000a -> LeftBrace
            0x0000000b -> RightBrace
            0x0000000c -> LeftAngle
            0x0000000d -> RightAngle
            0x0000000e -> Comma
            0x0000000f -> ResultType
            0x00000010 -> Colon
            0x00000011 -> SemiColon
            0x00000012 -> Equal
            0x00000013 -> HorizontalSpace
            0x00000014 -> VerticalSpace
            else -> error("enum not found")
        }
    }
}
