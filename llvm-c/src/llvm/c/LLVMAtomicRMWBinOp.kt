// this file is auto generated by endoqa kotlin ffi, modify it with caution
package llvm.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class LLVMAtomicRMWBinOp(
    public val `value`: Int,
) {
    Xchg(0),
    Add(1),
    Sub(2),
    And(3),
    Nand(4),
    Or(5),
    Xor(6),
    Max(7),
    Min(8),
    UMax(9),
    UMin(10),
    FAdd(11),
    FSub(12),
    FMax(13),
    FMin(14),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            LLVMAtomicRMWBinOp::class.java,
            "fromInt",
            MethodType.methodType(LLVMAtomicRMWBinOp::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            LLVMAtomicRMWBinOp::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): LLVMAtomicRMWBinOp = when (value) {
            Xchg.value -> Xchg
            Add.value -> Add
            Sub.value -> Sub
            And.value -> And
            Nand.value -> Nand
            Or.value -> Or
            Xor.value -> Xor
            Max.value -> Max
            Min.value -> Min
            UMax.value -> UMax
            UMin.value -> UMin
            FAdd.value -> FAdd
            FSub.value -> FSub
            FMax.value -> FMax
            FMin.value -> FMin
            else -> error("enum not found")
        }
    }
}
