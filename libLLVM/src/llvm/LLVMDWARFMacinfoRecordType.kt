// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.llvm

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import lib.llvm.LLVMDWARFMacinfoRecordType.Define
import lib.llvm.LLVMDWARFMacinfoRecordType.EndFile
import lib.llvm.LLVMDWARFMacinfoRecordType.Macro
import lib.llvm.LLVMDWARFMacinfoRecordType.StartFile
import lib.llvm.LLVMDWARFMacinfoRecordType.VendorExt

public enum class LLVMDWARFMacinfoRecordType(
  public val `value`: Int,
) {
  Define(0x01),
  Macro(0x02),
  StartFile(0x03),
  EndFile(0x04),
  VendorExt(0xff),
  ;

  public companion object {
    @JvmStatic
    public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            LLVMDWARFMacinfoRecordType::class.java,
            "fromInt",
            MethodType.methodType(LLVMDWARFMacinfoRecordType::class.java, Int::class.java)
        )

    @JvmStatic
    public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            LLVMDWARFMacinfoRecordType::class.java,
            "value",
            Int::class.java
        )

    @JvmStatic
    public fun fromInt(`value`: Int): LLVMDWARFMacinfoRecordType = when (value) {
      Define.value -> Define
      Macro.value -> Macro
      StartFile.value -> StartFile
      EndFile.value -> EndFile
      VendorExt.value -> VendorExt
      else -> error("enum not found")
    }
  }
}
