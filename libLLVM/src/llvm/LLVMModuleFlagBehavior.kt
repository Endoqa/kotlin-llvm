// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.llvm

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import lib.llvm.LLVMModuleFlagBehavior.Append
import lib.llvm.LLVMModuleFlagBehavior.AppendUnique
import lib.llvm.LLVMModuleFlagBehavior.Error
import lib.llvm.LLVMModuleFlagBehavior.Override
import lib.llvm.LLVMModuleFlagBehavior.Require
import lib.llvm.LLVMModuleFlagBehavior.Warning

public enum class LLVMModuleFlagBehavior(
  public val `value`: Int,
) {
  Error(0),
  Warning(1),
  Require(2),
  Override(3),
  Append(4),
  AppendUnique(5),
  ;

  public companion object {
    @JvmStatic
    public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            LLVMModuleFlagBehavior::class.java,
            "fromInt",
            MethodType.methodType(LLVMModuleFlagBehavior::class.java, Int::class.java)
        )

    @JvmStatic
    public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            LLVMModuleFlagBehavior::class.java,
            "value",
            Int::class.java
        )

    @JvmStatic
    public fun fromInt(`value`: Int): LLVMModuleFlagBehavior = when (value) {
      Error.value -> Error
      Warning.value -> Warning
      Require.value -> Require
      Override.value -> Override
      Append.value -> Append
      AppendUnique.value -> AppendUnique
      else -> error("enum not found")
    }
  }
}
