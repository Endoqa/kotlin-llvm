// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.llvm

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * Diagnostic severity.
 *
 * \since LTO_API_VERSION=7
 */
public enum class lto_codegen_diagnostic_severity_t(
    public val `value`: Int,
) {
    DSERROR(0),
    DSWARNING(1),
    DSREMARK(3),
    DSNOTE(2),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            lto_codegen_diagnostic_severity_t::class.java,
            "fromInt",
            MethodType.methodType(lto_codegen_diagnostic_severity_t::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            lto_codegen_diagnostic_severity_t::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): lto_codegen_diagnostic_severity_t = when (value) {
            DSERROR.value -> DSERROR
            DSWARNING.value -> DSWARNING
            DSREMARK.value -> DSREMARK
            DSNOTE.value -> DSNOTE
            else -> error("enum not found")
        }
    }
}
