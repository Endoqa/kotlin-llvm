// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.llvm

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import lib.llvm.LLVMOrcSymbolLookupFlags.RequiredSymbol
import lib.llvm.LLVMOrcSymbolLookupFlags.WeaklyReferencedSymbol

public enum class LLVMOrcSymbolLookupFlags(
  public val `value`: Int,
) {
  RequiredSymbol(0),
  WeaklyReferencedSymbol(1),
  ;

  public companion object {
    @JvmStatic
    public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            LLVMOrcSymbolLookupFlags::class.java,
            "fromInt",
            MethodType.methodType(LLVMOrcSymbolLookupFlags::class.java, Int::class.java)
        )

    @JvmStatic
    public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            LLVMOrcSymbolLookupFlags::class.java,
            "value",
            Int::class.java
        )

    @JvmStatic
    public fun fromInt(`value`: Int): LLVMOrcSymbolLookupFlags = when (value) {
      RequiredSymbol.value -> RequiredSymbol
      WeaklyReferencedSymbol.value -> WeaklyReferencedSymbol
      else -> error("enum not found")
    }
  }
}
