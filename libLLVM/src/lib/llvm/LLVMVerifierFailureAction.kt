// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.llvm

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

/**
 *
 * @defgroup LLVMCAnalysis Analysis
 * @ingroup LLVMC
 *
 * @{
 */
public enum class LLVMVerifierFailureAction(
    public val `value`: Int,
) {
    AbortProcessAction(0),

    /**
     * verifier will print to stderr and abort()
     */
    PrintMessageAction(1),

    /**
     * verifier will print to stderr and return 1
     */
    ReturnStatusAction(2),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            LLVMVerifierFailureAction::class.java,
            "fromInt",
            MethodType.methodType(LLVMVerifierFailureAction::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            LLVMVerifierFailureAction::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): LLVMVerifierFailureAction = when (value) {
            AbortProcessAction.value -> AbortProcessAction
            PrintMessageAction.value -> PrintMessageAction
            ReturnStatusAction.value -> ReturnStatusAction
            else -> error("enum not found")
        }
    }
}
