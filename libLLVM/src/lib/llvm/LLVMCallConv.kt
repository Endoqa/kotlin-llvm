// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.llvm

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import lib.llvm.LLVMCallConv.AMDGPUCSCallConv
import lib.llvm.LLVMCallConv.AMDGPUESCallConv
import lib.llvm.LLVMCallConv.AMDGPUGSCallConv
import lib.llvm.LLVMCallConv.AMDGPUHSCallConv
import lib.llvm.LLVMCallConv.AMDGPUKERNELCallConv
import lib.llvm.LLVMCallConv.AMDGPULSCallConv
import lib.llvm.LLVMCallConv.AMDGPUPSCallConv
import lib.llvm.LLVMCallConv.AMDGPUVSCallConv
import lib.llvm.LLVMCallConv.ARMAAPCSCallConv
import lib.llvm.LLVMCallConv.ARMAAPCSVFPCallConv
import lib.llvm.LLVMCallConv.ARMAPCSCallConv
import lib.llvm.LLVMCallConv.AVRBUILTINCallConv
import lib.llvm.LLVMCallConv.AVRINTRCallConv
import lib.llvm.LLVMCallConv.AVRSIGNALCallConv
import lib.llvm.LLVMCallConv.AnyRegCallConv
import lib.llvm.LLVMCallConv.CCallConv
import lib.llvm.LLVMCallConv.CXXFASTTLSCallConv
import lib.llvm.LLVMCallConv.ColdCallConv
import lib.llvm.LLVMCallConv.FastCallConv
import lib.llvm.LLVMCallConv.GHCCallConv
import lib.llvm.LLVMCallConv.HHVMCCallConv
import lib.llvm.LLVMCallConv.HHVMCallConv
import lib.llvm.LLVMCallConv.HiPECallConv
import lib.llvm.LLVMCallConv.IntelOCLBICallConv
import lib.llvm.LLVMCallConv.MSP430BUILTINCallConv
import lib.llvm.LLVMCallConv.MSP430INTRCallConv
import lib.llvm.LLVMCallConv.PTXDeviceCallConv
import lib.llvm.LLVMCallConv.PTXKernelCallConv
import lib.llvm.LLVMCallConv.PreserveAllCallConv
import lib.llvm.LLVMCallConv.PreserveMostCallConv
import lib.llvm.LLVMCallConv.SPIRFUNCCallConv
import lib.llvm.LLVMCallConv.SPIRKERNELCallConv
import lib.llvm.LLVMCallConv.SwiftCallConv
import lib.llvm.LLVMCallConv.Win64CallConv
import lib.llvm.LLVMCallConv.X8664SysVCallConv
import lib.llvm.LLVMCallConv.X86FastcallCallConv
import lib.llvm.LLVMCallConv.X86INTRCallConv
import lib.llvm.LLVMCallConv.X86RegCallCallConv
import lib.llvm.LLVMCallConv.X86StdcallCallConv
import lib.llvm.LLVMCallConv.X86ThisCallCallConv
import lib.llvm.LLVMCallConv.X86VectorCallCallConv

public enum class LLVMCallConv(
  public val `value`: Int,
) {
  CCallConv(0),
  FastCallConv(8),
  ColdCallConv(9),
  GHCCallConv(10),
  HiPECallConv(11),
  AnyRegCallConv(13),
  PreserveMostCallConv(14),
  PreserveAllCallConv(15),
  SwiftCallConv(16),
  CXXFASTTLSCallConv(17),
  X86StdcallCallConv(64),
  X86FastcallCallConv(65),
  ARMAPCSCallConv(66),
  ARMAAPCSCallConv(67),
  ARMAAPCSVFPCallConv(68),
  MSP430INTRCallConv(69),
  X86ThisCallCallConv(70),
  PTXKernelCallConv(71),
  PTXDeviceCallConv(72),
  SPIRFUNCCallConv(75),
  SPIRKERNELCallConv(76),
  IntelOCLBICallConv(77),
  X8664SysVCallConv(78),
  Win64CallConv(79),
  X86VectorCallCallConv(80),
  HHVMCallConv(81),
  HHVMCCallConv(82),
  X86INTRCallConv(83),
  AVRINTRCallConv(84),
  AVRSIGNALCallConv(85),
  AVRBUILTINCallConv(86),
  AMDGPUVSCallConv(87),
  AMDGPUGSCallConv(88),
  AMDGPUPSCallConv(89),
  AMDGPUCSCallConv(90),
  AMDGPUKERNELCallConv(91),
  X86RegCallCallConv(92),
  AMDGPUHSCallConv(93),
  MSP430BUILTINCallConv(94),
  AMDGPULSCallConv(95),
  AMDGPUESCallConv(96),
  ;

  public companion object {
    @JvmStatic
    public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            LLVMCallConv::class.java,
            "fromInt",
            MethodType.methodType(LLVMCallConv::class.java, Int::class.java)
        )

    @JvmStatic
    public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            LLVMCallConv::class.java,
            "value",
            Int::class.java
        )

    @JvmStatic
    public fun fromInt(`value`: Int): LLVMCallConv = when (value) {
      CCallConv.value -> CCallConv
      FastCallConv.value -> FastCallConv
      ColdCallConv.value -> ColdCallConv
      GHCCallConv.value -> GHCCallConv
      HiPECallConv.value -> HiPECallConv
      AnyRegCallConv.value -> AnyRegCallConv
      PreserveMostCallConv.value -> PreserveMostCallConv
      PreserveAllCallConv.value -> PreserveAllCallConv
      SwiftCallConv.value -> SwiftCallConv
      CXXFASTTLSCallConv.value -> CXXFASTTLSCallConv
      X86StdcallCallConv.value -> X86StdcallCallConv
      X86FastcallCallConv.value -> X86FastcallCallConv
      ARMAPCSCallConv.value -> ARMAPCSCallConv
      ARMAAPCSCallConv.value -> ARMAAPCSCallConv
      ARMAAPCSVFPCallConv.value -> ARMAAPCSVFPCallConv
      MSP430INTRCallConv.value -> MSP430INTRCallConv
      X86ThisCallCallConv.value -> X86ThisCallCallConv
      PTXKernelCallConv.value -> PTXKernelCallConv
      PTXDeviceCallConv.value -> PTXDeviceCallConv
      SPIRFUNCCallConv.value -> SPIRFUNCCallConv
      SPIRKERNELCallConv.value -> SPIRKERNELCallConv
      IntelOCLBICallConv.value -> IntelOCLBICallConv
      X8664SysVCallConv.value -> X8664SysVCallConv
      Win64CallConv.value -> Win64CallConv
      X86VectorCallCallConv.value -> X86VectorCallCallConv
      HHVMCallConv.value -> HHVMCallConv
      HHVMCCallConv.value -> HHVMCCallConv
      X86INTRCallConv.value -> X86INTRCallConv
      AVRINTRCallConv.value -> AVRINTRCallConv
      AVRSIGNALCallConv.value -> AVRSIGNALCallConv
      AVRBUILTINCallConv.value -> AVRBUILTINCallConv
      AMDGPUVSCallConv.value -> AMDGPUVSCallConv
      AMDGPUGSCallConv.value -> AMDGPUGSCallConv
      AMDGPUPSCallConv.value -> AMDGPUPSCallConv
      AMDGPUCSCallConv.value -> AMDGPUCSCallConv
      AMDGPUKERNELCallConv.value -> AMDGPUKERNELCallConv
      X86RegCallCallConv.value -> X86RegCallCallConv
      AMDGPUHSCallConv.value -> AMDGPUHSCallConv
      MSP430BUILTINCallConv.value -> MSP430BUILTINCallConv
      AMDGPULSCallConv.value -> AMDGPULSCallConv
      AMDGPUESCallConv.value -> AMDGPUESCallConv
      else -> error("enum not found")
    }
  }
}
