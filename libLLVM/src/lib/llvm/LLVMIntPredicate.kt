// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.llvm

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType

public enum class LLVMIntPredicate(
    public val `value`: Int,
) {
    EQ(32),

    /**
     * < equal
     */
    NE(33),

    /**
     * < not equal
     */
    UGT(34),

    /**
     * < unsigned greater than
     */
    UGE(35),

    /**
     * < unsigned greater or equal
     */
    ULT(36),

    /**
     * < unsigned less than
     */
    ULE(37),

    /**
     * < unsigned less or equal
     */
    SGT(38),

    /**
     * < signed greater than
     */
    SGE(39),

    /**
     * < signed greater or equal
     */
    SLT(40),

    /**
     * < signed less than
     */
    SLE(41),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            LLVMIntPredicate::class.java,
            "fromInt",
            MethodType.methodType(LLVMIntPredicate::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            LLVMIntPredicate::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): LLVMIntPredicate = when (value) {
            EQ.value -> EQ
            NE.value -> NE
            UGT.value -> UGT
            UGE.value -> UGE
            ULT.value -> ULT
            ULE.value -> ULE
            SGT.value -> SGT
            SGE.value -> SGE
            SLT.value -> SLT
            SLE.value -> SLE
            else -> error("enum not found")
        }
    }
}
